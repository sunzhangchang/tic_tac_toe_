{"version":3,"sources":["components/Square.js","components/Board.js","components/Game.js","index.js"],"names":["Square","props","className","onClick","style","highlight","value","Board","state","order","i","this","winner","includes","squares","j","element","push","renderSquare","renderBoardRow","React","Component","Game","history_","Array","fill","position","stepNumber","xIsNext","moveOrder","slice","length","calculateWinner","setState","concat","step","current","reverse","status","moves","map","move","realMove","desc","parseInt","jumpTo","handleRestart","toggleSort","handleClick","lines","winpos","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dba6a040.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Square(props) {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.onClick}\r\n            style={props.highlight ? {\"background\": \"#eee\"} : {}}\r\n        >\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport Square from \"./Square\"\r\n\r\nexport default class Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            order: 3\r\n        }\r\n    }\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                key={i}\r\n                highlight={this.props.winner && this.props.winner.includes(i)}\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        )\r\n    }\r\n\r\n    renderBoardRow(j) {\r\n        let element = []\r\n        for (let i = 0; i < this.state.order; i++) {\r\n            element.push(this.renderSquare(j + i))\r\n        }\r\n        return (\r\n            <div\r\n                className=\"board-row\"\r\n                key={j}\r\n            >\r\n                {element}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        let element = []\r\n        for (let i = 0; i < this.state.order; i++) {\r\n            element.push(this.renderBoardRow(i * this.state.order))\r\n        }\r\n        return <div> {element} </div>\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport Board from \"./Board\"\r\n\r\nexport default class Game extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            history_: [{\r\n                squares: Array(9).fill(null),\r\n                position: null\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            moveOrder: true\r\n        }\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history_ = this.state.history_.slice(0, this.state.stepNumber + 1)\r\n        const current = history_[history_.length - 1]\r\n        const squares = current.squares.slice()\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O'\r\n        this.setState({\r\n            history_: history_.concat([{\r\n                squares: squares,\r\n                position: i\r\n            }]),\r\n            stepNumber: history_.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        })\r\n    }\r\n\r\n    handleRestart() {\r\n        this.setState({\r\n            history_: [{\r\n                squares: Array(9).fill(null),\r\n                position: null\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true,\r\n            moveOrder: true\r\n        })\r\n    }\r\n\r\n    toggleSort() {\r\n        this.setState({\r\n            moveOrder: !this.state.moveOrder\r\n        })\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history_ = this.state.history_.slice()\r\n        const current = history_[this.state.stepNumber]\r\n        const winner = calculateWinner(current.squares)\r\n        const style = {'fontWeight': 'bold'}\r\n\r\n        if (!this.state.moveOrder) {\r\n            history_.reverse()\r\n        }\r\n\r\n        const moves = history_.map((step, move) => {\r\n            const realMove = this.state.moveOrder ? move : history_.length - 1 - move\r\n            const desc = realMove ?\r\n                ' Go to move (' + parseInt(history_[move].position / 3) + ',' + history_[move].position % 3 + ')'\r\n                : 'Go to game start'\r\n            return (\r\n                <li key={move}>\r\n                    <button\r\n                        style={realMove == this.state.stepNumber ? style : {}}\r\n                        className={'historyButton'}\r\n                        onClick={() => this.jumpTo(realMove)}\r\n                    >\r\n                        {desc}\r\n                    </button>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        let status\r\n        if (winner === false && history_.length === 10 && this.state.stepNumber === 9) {\r\n            status = \"Draw\"\r\n        } else if (winner === null) {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O')\r\n        } else {\r\n            status = 'Winner: ' + current.squares[winner[0]]\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-info\">\r\n                    <div> {status} </div>\r\n                    <div> Show in {this.state.moveOrder ? 'Asc' : 'Desc'} </div>\r\n                    <button onClick={() => this.handleRestart()}> New  Game </button>\r\n                    <button onClick={() => this.toggleSort()}> Toggle Sort </button>\r\n                </div>\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}\r\n                        winner={winner}\r\n                    />\r\n                </div>\r\n                <div className=\"game-history\">\r\n                    <ol> {moves} </ol>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ]\r\n    let winpos = []\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i]\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            winpos = winpos.concat(lines[i])\r\n        }\r\n    }\r\n    if (winpos.length) {\r\n        return winpos\r\n    }\r\n    for (let i = 0; i < 9; i++) {\r\n        if (squares[i] === null) {\r\n            return null\r\n        }\r\n    }\r\n    return false\r\n}\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport Game from \"./components/Game\"\n\n// ========================================\n\nReactDOM.render(\n    <Game/>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}